@model EventListener.Models.Activity

@{
    ViewData["Title"] = "Chat Room";
    var roomId = @ViewData["RoomId"];
    var currentUser = User.Identity.Name;
}


<link rel="stylesheet" href="~/css/ChatRoom/Room.css" asp-append-version="true">


<nav>
    <span class="span-left"><a asp-controller="Activity" asp-action="detail" asp-route-activityIdHash="@roomId"><i class="fa-solid fa-arrow-left"></i>&nbsp&nbsp‡∏Å‡∏•‡∏±‡∏ö</a></span>
    <div class="room-info">
        <h1 class="title">@Model.ActivityName</h1>
        <div class="username"><i class="fa-solid fa-circle" style="color: #008cff;"></i><h2>@currentUser</h2></div>
    </div>
    <span class="span-right"></span>
</nav>

<div id="chat-line">
    @foreach (var message in Model.ChatMessages)
    {
        
        @if (@message.SenderId == @currentUser) {
            <div class="chat-container my-chat">
                <div class="chat-box">
                    <span>You</span>
                    <div class="chat">@message.Message</div>
                    <span class="sendate">@message.SendDate</span>
                </div>
                @if (@message.User.UserImageUrl == null){
                    <img src="~/user.png" alt="">
                }
            </div>
        } else {
            <div class="chat-container other-chat">
                @if (@message.User.UserImageUrl == null){
                    <img src="~/user.png" alt="">
                }
                <div class="chat-box">
                    <span>@message.SenderId</span>
                    <div class="chat">@message.Message</div>
                    <span class="sendate">@message.SendDate</span>
                </div>
            </div>
        }
    }
</div>

<div class="input-message-container">
    <input type="text" id="messageInput" placeholder="Type a message..." />
    <button onclick="sendMessage()"><i class="fa-regular fa-paper-plane" style="color: #32a482;"></i></button>
</div>

<script>
    const roomId = "@roomId";
    const userId = "@currentUser";
    const socket = new WebSocket(`ws://localhost:5198/ws/chat/${roomId}/${userId}`);
    const chatLine = document.getElementById("chat-line");

    socket.onopen = function(event) {
        console.log("WebSocket connected to room:", roomId);
    };

    socket.onmessage = function(event) {
        const message = event.data;
        console.log("Received message:", message);
        const li = document.createElement("li");
        li.innerHTML = event.data;
        chatLine.appendChild(li);

    };

    socket.onclose = function(event) {
        console.log("WebSocket connection closed");
    };

    socket.onerror = function(error) {
        console.error("WebSocket Error:", error);
    };

    function sendMessage() {
        const messageInput = document.getElementById("messageInput");
        const message = messageInput.value.trim();
        if (message && socket.readyState === WebSocket.OPEN) {
            socket.send(message);
            console.log("üì§ Sent:", message);
            messageInput.value = "";
        } else {
            console.error("WebSocket is not open or message is empty.");
        }
    }

</script>
