@model List<ActivityViewModel>

<link rel="stylesheet" href="~/css/home/home.css" asp-append-version="true">
<div>
    <nav>
        <div class="left-container">
            <div class="search-bar">
                <label for="search"><i class="fa-solid fa-magnifying-glass"></i></label>
                <input type="text" name="search" id="">
            </div>
            <div class="filter-container">
                <div class="date-input">
                    <i class="fa-regular fa-calendar"></i><button onclick="openPopup()" id="date-filter">all</button>
                </div>
                <div class="filter"><i class="fa-solid fa-sliders"></i><button> all</button></div>
            </div>
        </div>
        <div class="buttongroup-and-user">
            @if (User.Identity != null && User.Identity.IsAuthenticated) {
                <a asp-controller="activity" asp-action="create">
                    <button class="create-activity">
                        <i class="fa-solid fa-plus"></i>
                        สร้างกิจกรรม
                    </button>
                </a>
                <a asp-controller="notification" asp-action="notification">
                    <button class="notification">
                        <i class="fa-regular fa-bell"></i>
                        การเเจ้งเตือน
                    </button>
                </a>
                
                <div class="dropdown">
                    @if (ViewData["avatarUrl"] == null) {
                        <button class="user-avatar-btn" onclick="drop()"><img src="~/user.png" alt="avatar-img" class="avatar-img"></button>
                    } else {
                        <button class="user-avatar-btn" onclick="drop()"><img src="@ViewData["avatarUrl"]" alt="avatar-img" class="avatar-img"></button>
                    }
                    <div id="myDropdown" class="dropdown-content">
                        <a asp-controller="profile" asp-action="index" as>โปรไฟล์</a>
                        <a asp-controller="account" asp-action="logout">ออกจากระบบ</a>
                    </div>
                </div>
            } else {
                <a asp-controller="account" asp-action="login"><button class="un-auth-btn login"><div>Login</div></button></a>
                <a asp-controller="account" asp-action="register"><button class="un-auth-btn register"><div>Register</div></button></a>
            }
        </div>
    </nav>
    
    <div class="activity-card-container"></div>
</div>

<div class="popup-overlay" id="popupOverlay" onclick="openPopup(event)">
    <div class="popup" onclick="event.stopPropagation()">
        <h3>เลือกช่วงเวลาของกิจกรรมที่จะค้นหา</h3>
        <div class="date-input-container">
            <div><h4>เริ่มต้น</h4><input type="date" id="start-date"></div>
            <div>-></div>
            <div><h4>สิ้นสุด</h4><input type="date" id="end-date"></div>
        </div>
        <button class="close-btn" onclick="closePopup()">เลือก</button>
    </div>
</div>


<script>

    function getDaysToBeginWord(date) {
        const now = new Date()

        if (date.getUTCDate() == now.getUTCDate()) {
            return "กิจกรรมจะเกิดขึ้นวันนี้"
        } else {
            const timeDiff = date.getTime() - now.getTime();
            const dateDiff = Math.ceil(timeDiff / (1000 * 60 * 60 * 24));
            if (timeDiff < 0) {
                return "กิจกรรมเริ่มไปแล้ว"
            } else if (timeDiff == 1) {
                return "กิจกรรมจะเริ่มวันพรุ่งนี้"
            } else {
                return `กิจกรรมจะเริ่มในอีก ${dateDiff} วัน`
            }
        }
    }
    function createUserIcon(userJoinActivity, userJoinActivityCount) {
        let iconList = userJoinActivity.map(uja => {
            if (uja.user.userImageUrl == null) {
                return `<img src="/user.png" alt="participant-img" class="participant-img">`
            } else {
                return `<img src="${uja.user.userImageUrl}" alt="participant-img" class="participant-img">`
            }
        })

        iconList = iconList.slice(0, 5)

        if (userJoinActivityCount > 5) {
            iconList.push(`<span style="background-color: gray; padding: 14px; border-radius: 20px; font-size: 17px;"
            ><i class="fa-regular fa-user" style="margin-right: 8px;"></i>${userJoinActivityCount - 5} +</span
        >`)
        }
        return iconList.join("")

    }

    async function fetchActivityData() {
        try {
            const response = await fetch("@Url.Action("fetchActivityData", "Home")");
            if (!response.ok) throw new Error("Failed to fetch data");
            
            const data = await response.json();
            console.log(data);

            const container = document.querySelector(".activity-card-container");
            container.innerHTML = "<p>กำลังโหลดกิจกรรม...</p>"; 

            setTimeout(() => { 
                container.innerHTML = "";

                data.forEach(activity => {
                    const card = document.createElement("a");
                    card.classList.add("activity-card");
                    card.href = `activity/detail/${activity.activityIdEncode}`;

                    let categoryClass = "";
                    switch (activity.activityTagCategory) {
                        case "Education": categoryClass = "education"; break;
                        case "Exercise & Sports": categoryClass = "exercise-sports"; break;
                        case "Arts & Culture": categoryClass = "arts-culture"; break;
                        case "Social": categoryClass = "social"; break;
                        default: categoryClass = "";
                    }
                    const startDate = new Date(Date.parse(activity.startDate))
                    let formattedDate = startDate.toLocaleDateString("th-TH", {
                        weekday: 'long', day: 'numeric', month: 'long', year: 'numeric'
                    });

                    let formattedTime = activity.startTime.substring(0, 5) + " น.";

                    card.innerHTML = `
                        <div class="header-tag-card ${categoryClass}">${activity.activityTagCategory}</div>
                        <div class="body-card">
                            <div class="tag-line">
                                <span class="tag">${activity.activityTagId}</span>
                            </div>
                            <div class="time-info">
                                <span>${formattedDate}, ${formattedTime}</span>
                                <span>${getDaysToBeginWord(startDate)}</span>
                            </div>
                            <div class="card-info">
                                <div class="info">
                                    <article class="activity-name">${activity.activityName}</article>
                                    <span class="location">${activity.location}</span>
                                    <div class="user-avatar">
                                    ${createUserIcon(activity.userJoinActivity, activity.userJoinActivityCount)}
                                    </div>
                                    <span class="participant-info">${activity.userJoinActivityCount}/${activity.participantLimit} คนจะไป</span>
                                </div>
                                <img src="${activity.activityImageUrl}" alt="activity picture" class="activity-img">
                            </div>
                        </div>
                    `;
                    container.appendChild(card);
                });
            }, 500);
        } catch (error) {
            console.error("Error fetching activities:", error);
        }
    }

    fetchActivityData();
</script>
<script src="~/js/home/dropdown.js" asp-append-version="true"></script>
<script src="~/js/home/filter.js" asp-append-version="true"></script>