@model EditProfileViewModel

<link rel="stylesheet" href="~/css/Profile/edit.css" asp-append-version="true" enctype="multipart/form-data">

<div class="main">
    <nav>
         <button class="cancel-button">
                <i class="fa-solid fa-x"></i>
                ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å
            </button>
        <h2 class="title">‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå (user: @Model.User.UserName)</h2>
        <div class="buttongroup-and-user">
            <button class="confirm-button" id="submitBtn" form="edit_profile_form">
                <i class="fa-solid fa-check"></i>
                ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô
            </button>
        </div>
    </nav>
    <form id="edit_profile_form"class="form_body" asp-action="EditProfile" method="post">
         <div class="zone1">
            <div class="imgquestion">
                <div class="imgdiv">
                    <img id="previewImage" style="display: none;">
                </div>
                <div class="imgreq">
                    <label for="imageUpload"><i class="fa-solid fa-link"></i> ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û:</label>
                    <input type="file" id="imageUpload" accept="image/*">
                </div>
            </div>
            <div class="rowq">
                <div class="question">
                    <label for="fname">Firstname:</label>
                    <input type="text" id="fname" asp-for="User.Firstname" required value="@Model.User.Firstname">
                </div>
                <div class="question">
                    <label for="lname">Lastname:</label>
                    <input type="text" id="lname" asp-for="User.Lastname" required value="@Model.User.Lastname">
                </div>
            </div>
            <div class="question">
                    <label for="nname">Nickname: </label>
                    <input class=nickname type="text" id="nname" asp-for="User.Nickname" required value="@Model.User.Nickname">
            </div>


        </div>
        <div class="zone2">
            <div class="rowq">
                <div class="question">
                        <label for="bdate">Birthdate: @Model.User.Birthday</label>
                        <input type="date" id="bdate"  asp-for="User.Birthday" value="@Model.User.Birthday?.ToString("yyyy-MM-dd")" required>
                </div>
                <div class="question">
                        <label for="sex">sex</label>
                        <select id="sex" asp-for="User.Sex" class="form-control">
                        <option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å --</option>
                        <option value="Male" selected="@(Model.User.Sex == "Male" ? "selected" : null)">‡∏ä‡∏≤‡∏¢</option>
                        <option value="Female" selected="@(Model.User.Sex == "Female" ? "selected" : null)">‡∏´‡∏ç‡∏¥‡∏á</option>
                    </select>
                </div>
            </div>
            <div class="question">
                <label for="name"><i class="fa-regular fa-user"></i>About me</label>
                <textarea id="details" rows="4" cols="50" asp-for="User.About" placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà...">@Model.User.About</textarea>
            </div>
            <div class="drag-drop">
                <label for="name"><i class="fa-solid fa-pen-nib"></i>‡∏ï‡∏¥‡∏î‡πÅ‡∏ó‡πá‡∏Å:</label>
                
                <div class="source">
                        @foreach (var tag in Model.TagList)
                        {   @if(!Model.UserInterestActivityTag.Any(t => t.ActivityTagId == tag.ActivityName)){
                                <div class="tag">@tag.ActivityName</div>
                            }
                        }
                    
                </div>
                <div class="destination">
                @foreach (var tag in Model.UserInterestActivityTag)
                {
                    <div class="tag">@tag.ActivityTagId</div>
                }
                </div>
            </div>
        </div>

        
    </form>
</div>

<script>
    document.getElementById("imageUpload").addEventListener("change", function(event) {
        const file = event.target.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function(e) {
                const img = document.getElementById("previewImage");
                img.src = e.target.result;
                img.style.display = "block";
                img.style.width = "100%";
                img.style.height = "100%";

            };
            reader.readAsDataURL(file);
        }
    });
    document.addEventListener("DOMContentLoaded", function () {
        const source = document.querySelector(".source");
        const destination = document.querySelector(".destination");
        tags = (Array.from(source.children)).concat(Array.from(destination.children));;
        tags.forEach(e => {
            e.setAttribute("draggable", true);
            e.addEventListener("dragstart", dragStart);
        })

        function dragStart(event) {
            event.dataTransfer.setData("text/plain", event.target.textContent);
        }

        destination.addEventListener("dragover", function (event) {
            event.preventDefault();
        });

        destination.addEventListener("drop", function (event) {
            event.preventDefault();
            let data = event.dataTransfer.getData("text/plain");
            let draggedTag = Array.from(source.children).find(tag => tag.textContent === data);
            let checkedTag = Array.from(destination.children).find(tag => tag.textContent === data);

            if (draggedTag) {
                draggedTag.remove();
            }
            if (checkedTag) {
                return 0
            }

            let newTag = document.createElement("div");
            newTag.textContent = data;
            newTag.classList.add("tag");
            newTag.setAttribute("draggable", true); 
            newTag.addEventListener("dragstart", dragStart);
            newTag.style.userSelect = "none"; 
            destination.appendChild(newTag);
        });

        source.addEventListener("dragover", function (event) {
        event.preventDefault();
        });

        source.addEventListener("drop", function (event) {
            event.preventDefault();

            let data = event.dataTransfer.getData("text/plain");
            let draggedTag = Array.from(destination.children).find(tag => tag.textContent === data);
            let checkedTag = Array.from(source.children).find(tag => tag.textContent === data);

            if (draggedTag) {
                draggedTag.remove();
            }

            if (checkedTag) {
                return 0
            }

            let newTag = document.createElement("div");
            newTag.textContent = data;
            newTag.classList.add("tag");
            newTag.setAttribute("draggable", true); 
            newTag.addEventListener("dragstart", dragStart);
            source.appendChild(newTag);
        });


    })
    document.getElementById("submitBtn").addEventListener("click", function () {
        form = document.getElementById("edit_profile_form");
        if (!form.checkValidity()) {
        form.reportValidity(); // üîπ ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô required
        return;
    }
        let oldInput = document.getElementById("tempInterestTags");
        if (oldInput) oldInput.remove();
        let tags = Array.from(document.querySelector(".destination").children)
                        .map(tag => tag.textContent.trim());
        let input = document.createElement("input");
        input.type = "hidden";
        input.name = "InterestTags";
        input.value = tags.join(",");
        input.id = "tempInterestTags";
        form.appendChild(input);
        form.submit();
        });
</script>
